{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Qubis\\\\frontend\\\\src\\\\components\\\\UnifiedMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport windowsIcon from \"../assets/windows-icon.png\";\nimport cloudIcon from \"../assets/internet.png\";\nimport qubisBg from \"../assets/qubis_bg.png\";\nimport { useTranslation } from \"../i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UnifiedMap({\n  machines,\n  positions,\n  setPositions,\n  hostPosition,\n  setHostPosition,\n  internetPosition,\n  setInternetPosition,\n  onRightClick,\n  onDoubleClick,\n  darkMode,\n  showDelete,\n  onDeleteConfirm\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const outerRef = useRef(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDraggingMap, setIsDraggingMap] = useState(false);\n  const [internetOnline, setInternetOnline] = useState(false);\n  const [machineStates, setMachineStates] = useState({});\n  const [initialLayoutDone, setInitialLayoutDone] = useState(false);\n  const safeMachines = Array.isArray(machines) ? machines : [];\n  const computeGridPosition = (index, startX, startY, maxPerRow, xGap = 160, yGap = 130) => {\n    const col = index % maxPerRow;\n    const row = Math.floor(index / maxPerRow);\n    return {\n      x: startX + col * xGap,\n      y: startY + row * yGap\n    };\n  };\n  useEffect(() => {\n    if (safeMachines.length > 0) {\n      const updatedPositions = {};\n      const centerX = Math.floor(window.innerWidth / 2) - 60;\n      safeMachines.forEach((vm, i) => {\n        const oldName = Object.keys(positions).find(key => vm.oldName && key === vm.oldName);\n        if (oldName && positions[oldName]) {\n          updatedPositions[vm.name] = positions[oldName];\n        } else if (positions[vm.name]) {\n          updatedPositions[vm.name] = positions[vm.name];\n        } else {\n          var _vm$adapterType;\n          const isBridged = (_vm$adapterType = vm.adapterType) === null || _vm$adapterType === void 0 ? void 0 : _vm$adapterType.toLowerCase().includes(\"bridged\");\n          updatedPositions[vm.name] = computeGridPosition(i, isBridged ? centerX - 750 : centerX - 50, isBridged ? 400 : 500, 6);\n        }\n      });\n      setPositions(updatedPositions);\n      if (!initialLayoutDone) {\n        setInternetPosition({\n          x: centerX - 250,\n          y: 0\n        });\n        setHostPosition({\n          x: centerX + 100,\n          y: 250\n        });\n        setInitialLayoutDone(true);\n      }\n    }\n  }, [safeMachines]);\n  useEffect(() => {\n    const fetchStatuses = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/internet-status\");\n        const data = await res.json();\n        setInternetOnline(data.online);\n      } catch {\n        setInternetOnline(false);\n      }\n      const stateMap = {};\n      safeMachines.forEach(vm => {\n        stateMap[vm.name] = vm.ipValid;\n      });\n      setMachineStates(stateMap);\n    };\n    fetchStatuses();\n    const interval = setInterval(fetchStatuses, 5000);\n    return () => clearInterval(interval);\n  }, [machines]);\n  const handleMouseDown = e => {\n    if (e.target.closest(\".draggable-box\")) return;\n    if (e.button !== 0) return;\n    setIsDraggingMap(true);\n    setDragOffset({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDraggingMap || !outerRef.current) return;\n    const dx = e.clientX - dragOffset.x;\n    const dy = e.clientY - dragOffset.y;\n    outerRef.current.scrollLeft -= dx;\n    outerRef.current.scrollTop -= dy;\n    setDragOffset({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleMouseUp = () => setIsDraggingMap(false);\n  const getCenter = pos => ({\n    x: pos.x + 60,\n    y: pos.y + 50\n  });\n  const bgClass = darkMode ? \"bg-gray-800\" : \"bg-gray-100\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex-1 relative ${bgClass} z-10 select-none`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: outerRef,\n      className: \"relative w-full h-full overflow-auto border border-black\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-canvas relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: qubisBg,\n          alt: \"Background Logo\",\n          className: \"absolute top-10/10 left-10/10 -translate-x-1/2 -translate-y-1/2 opacity-0 pointer-events-none w-[500px] select-none z-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"network-lines\",\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            ...getLineProps(getCenter(hostPosition), getCenter(internetPosition), \"host-internet-line\", internetOnline ? \"\" : \"offline\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), safeMachines.map(vm => {\n            const vmPos = positions[vm.name];\n            if (!vmPos || !vm.adapterType) return null;\n            const isBridged = vm.adapterType.toLowerCase().includes(\"bridged\");\n            const target = isBridged ? internetPosition : hostPosition;\n            const strokeWidth = vm.bandwidth ? Math.max(2, vm.bandwidth / 10) : 2;\n            const ipOk = machineStates[vm.name] !== false;\n            const modifier = isBridged && !ipOk ? \"offline\" : \"\";\n            return /*#__PURE__*/_jsxDEV(\"line\", {\n              ...getLineProps(getCenter(vmPos), getCenter(target), `network-line ${vm.adapterType.toLowerCase().replace(/\\s/g, \"-\")}`, modifier, strokeWidth),\n              children: /*#__PURE__*/_jsxDEV(\"title\", {\n                children: `${vm.name} → ${isBridged ? t(\"internet\") : t(\"host_os\")}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, vm.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n          position: hostPosition,\n          onDrag: (e, d) => setHostPosition({\n            x: d.x,\n            y: d.y\n          }),\n          bounds: \"parent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"draggable-box shadow-md rounded-lg px-2 py-1 hover:shadow-2xl transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: windowsIcon,\n              alt: \"Windows\",\n              className: \"w-14 h-14 mx-auto\",\n              draggable: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium dark:text-white text-black\",\n              children: t(\"host_os\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n          position: internetPosition,\n          onDrag: (e, d) => setInternetPosition({\n            x: d.x,\n            y: d.y\n          }),\n          bounds: \"parent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"draggable-box shadow-md rounded-lg px-2 py-1 hover:shadow-2xl transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: cloudIcon,\n              alt: \"Internet\",\n              className: \"w-14 h-14 mx-auto\",\n              draggable: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium dark:text-white text-black\",\n              children: t(\"internet\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), safeMachines.map((vm, i) => {\n          const pos = positions[vm.name] || {\n            x: 400 + i * 140,\n            y: 300\n          };\n          const ipText = vm.ipValid ? vm.ip : t(\"ip_unknown\");\n          const handleClick = () => {\n            if (showDelete && onDeleteConfirm) {\n              onDeleteConfirm(vm.name);\n            }\n          };\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            position: pos,\n            onDrag: (e, d) => setPositions(prev => ({\n              ...prev,\n              [vm.name]: {\n                x: d.x,\n                y: d.y\n              }\n            })),\n            bounds: \"parent\",\n            disabled: showDelete,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"draggable-box shadow-md rounded-lg px-2 py-1 hover:shadow-2xl transition\",\n              onContextMenu: e => onRightClick(e, vm),\n              onDoubleClick: () => onDoubleClick === null || onDoubleClick === void 0 ? void 0 : onDoubleClick(vm),\n              onClick: handleClick,\n              title: `VM: ${vm.name}\\nAdapter: ${vm.adapterType || \"N/A\"}\\nIP: ${ipText}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-4xl\",\n                children: \"\\uD83D\\uDCBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-semibold truncate w-[100px] mx-auto dark:text-white text-black\",\n                children: vm.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), vm.networkInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs mt-1 truncate text-gray-500 dark:text-gray-300\",\n                children: vm.networkInfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs italic mt-1 truncate text-gray-400 dark:text-gray-300\",\n                children: [\"\\uD83C\\uDF10 \", ipText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, vm.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(UnifiedMap, \"ZovjmdanOdxY/ObjsbW6Q1+TdGE=\", false, function () {\n  return [useTranslation];\n});\n_c = UnifiedMap;\nfunction getLineProps(from, to, baseClass = \"\", modifier = \"\", strokeWidth = 2) {\n  return {\n    x1: from.x,\n    y1: from.y,\n    x2: to.x,\n    y2: to.y,\n    strokeWidth,\n    className: `${baseClass} ${modifier}`.trim()\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"UnifiedMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Draggable","windowsIcon","cloudIcon","qubisBg","useTranslation","jsxDEV","_jsxDEV","UnifiedMap","machines","positions","setPositions","hostPosition","setHostPosition","internetPosition","setInternetPosition","onRightClick","onDoubleClick","darkMode","showDelete","onDeleteConfirm","_s","t","outerRef","dragOffset","setDragOffset","x","y","isDraggingMap","setIsDraggingMap","internetOnline","setInternetOnline","machineStates","setMachineStates","initialLayoutDone","setInitialLayoutDone","safeMachines","Array","isArray","computeGridPosition","index","startX","startY","maxPerRow","xGap","yGap","col","row","Math","floor","length","updatedPositions","centerX","window","innerWidth","forEach","vm","i","oldName","Object","keys","find","key","name","_vm$adapterType","isBridged","adapterType","toLowerCase","includes","fetchStatuses","res","fetch","data","json","online","stateMap","ipValid","interval","setInterval","clearInterval","handleMouseDown","e","target","closest","button","clientX","clientY","handleMouseMove","current","dx","dy","scrollLeft","scrollTop","handleMouseUp","getCenter","pos","bgClass","className","children","ref","onMouseDown","onMouseMove","onMouseUp","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","getLineProps","map","vmPos","strokeWidth","bandwidth","max","ipOk","modifier","replace","position","onDrag","d","bounds","draggable","ipText","ip","handleClick","prev","disabled","onContextMenu","onClick","title","networkInfo","_c","from","to","baseClass","x1","y1","x2","y2","trim","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Qubis/frontend/src/components/UnifiedMap.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport windowsIcon from \"../assets/windows-icon.png\";\r\nimport cloudIcon from \"../assets/internet.png\";\r\nimport qubisBg from \"../assets/qubis_bg.png\";\r\nimport { useTranslation } from \"../i18n\";\r\n\r\nexport default function UnifiedMap({\r\n  machines,\r\n  positions,\r\n  setPositions,\r\n  hostPosition,\r\n  setHostPosition,\r\n  internetPosition,\r\n  setInternetPosition,\r\n  onRightClick,\r\n  onDoubleClick,\r\n  darkMode,\r\n  showDelete,\r\n  onDeleteConfirm,\r\n}) {\r\n  const { t } = useTranslation();\r\n  const outerRef = useRef(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isDraggingMap, setIsDraggingMap] = useState(false);\r\n  const [internetOnline, setInternetOnline] = useState(false);\r\n  const [machineStates, setMachineStates] = useState({});\r\n  const [initialLayoutDone, setInitialLayoutDone] = useState(false);\r\n\r\n  const safeMachines = Array.isArray(machines) ? machines : [];\r\n\r\n  const computeGridPosition = (index, startX, startY, maxPerRow, xGap = 160, yGap = 130) => {\r\n    const col = index % maxPerRow;\r\n    const row = Math.floor(index / maxPerRow);\r\n    return {\r\n      x: startX + col * xGap,\r\n      y: startY + row * yGap,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (safeMachines.length > 0) {\r\n      const updatedPositions = {};\r\n      const centerX = Math.floor(window.innerWidth / 2) - 60;\r\n\r\n      safeMachines.forEach((vm, i) => {\r\n        const oldName = Object.keys(positions).find((key) => vm.oldName && key === vm.oldName);\r\n        if (oldName && positions[oldName]) {\r\n          updatedPositions[vm.name] = positions[oldName];\r\n        } else if (positions[vm.name]) {\r\n          updatedPositions[vm.name] = positions[vm.name];\r\n        } else {\r\n          const isBridged = vm.adapterType?.toLowerCase().includes(\"bridged\");\r\n          updatedPositions[vm.name] = computeGridPosition(\r\n            i,\r\n            isBridged ? centerX - 750 : centerX - 50,\r\n            isBridged ? 400 : 500,\r\n            6\r\n          );\r\n        }\r\n      });\r\n\r\n      setPositions(updatedPositions);\r\n      if (!initialLayoutDone) {\r\n        setInternetPosition({ x: centerX - 250, y: 0 });\r\n        setHostPosition({ x: centerX + 100, y: 250 });\r\n        setInitialLayoutDone(true);\r\n      }\r\n    }\r\n  }, [safeMachines]);\r\n\r\n  useEffect(() => {\r\n    const fetchStatuses = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/internet-status\");\r\n        const data = await res.json();\r\n        setInternetOnline(data.online);\r\n      } catch {\r\n        setInternetOnline(false);\r\n      }\r\n\r\n      const stateMap = {};\r\n      safeMachines.forEach((vm) => {\r\n        stateMap[vm.name] = vm.ipValid;\r\n      });\r\n      setMachineStates(stateMap);\r\n    };\r\n\r\n    fetchStatuses();\r\n    const interval = setInterval(fetchStatuses, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [machines]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    if (e.target.closest(\".draggable-box\")) return;\r\n    if (e.button !== 0) return;\r\n    setIsDraggingMap(true);\r\n    setDragOffset({ x: e.clientX, y: e.clientY });\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDraggingMap || !outerRef.current) return;\r\n    const dx = e.clientX - dragOffset.x;\r\n    const dy = e.clientY - dragOffset.y;\r\n    outerRef.current.scrollLeft -= dx;\r\n    outerRef.current.scrollTop -= dy;\r\n    setDragOffset({ x: e.clientX, y: e.clientY });\r\n  };\r\n\r\n  const handleMouseUp = () => setIsDraggingMap(false);\r\n\r\n  const getCenter = (pos) => ({\r\n    x: pos.x + 60,\r\n    y: pos.y + 50,\r\n  });\r\n\r\n  const bgClass = darkMode ? \"bg-gray-800\" : \"bg-gray-100\";\r\n\r\n  return (\r\n    <div className={`flex-1 relative ${bgClass} z-10 select-none`}>\r\n      <div\r\n        ref={outerRef}\r\n        className=\"relative w-full h-full overflow-auto border border-black\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n      >\r\n        <div className=\"network-canvas relative\">\r\n          <img\r\n            src={qubisBg}\r\n            alt=\"Background Logo\"\r\n            className=\"absolute top-10/10 left-10/10 -translate-x-1/2 -translate-y-1/2 opacity-0 pointer-events-none w-[500px] select-none z-0\"\r\n          />\r\n\r\n          <svg className=\"network-lines\">\r\n            <line\r\n              {...getLineProps(\r\n                getCenter(hostPosition),\r\n                getCenter(internetPosition),\r\n                \"host-internet-line\",\r\n                internetOnline ? \"\" : \"offline\"\r\n              )}\r\n            />\r\n            {safeMachines.map((vm) => {\r\n              const vmPos = positions[vm.name];\r\n              if (!vmPos || !vm.adapterType) return null;\r\n\r\n              const isBridged = vm.adapterType.toLowerCase().includes(\"bridged\");\r\n              const target = isBridged ? internetPosition : hostPosition;\r\n              const strokeWidth = vm.bandwidth ? Math.max(2, vm.bandwidth / 10) : 2;\r\n\r\n              const ipOk = machineStates[vm.name] !== false;\r\n              const modifier = isBridged && !ipOk ? \"offline\" : \"\";\r\n\r\n              return (\r\n                <line\r\n                  key={vm.name}\r\n                  {...getLineProps(\r\n                    getCenter(vmPos),\r\n                    getCenter(target),\r\n                    `network-line ${vm.adapterType.toLowerCase().replace(/\\s/g, \"-\")}`,\r\n                    modifier,\r\n                    strokeWidth\r\n                  )}\r\n                >\r\n                  <title>{`${vm.name} → ${isBridged ? t(\"internet\") : t(\"host_os\")}`}</title>\r\n                </line>\r\n              );\r\n            })}\r\n          </svg>\r\n\r\n          {/* Host */}\r\n          <Draggable position={hostPosition} onDrag={(e, d) => setHostPosition({ x: d.x, y: d.y })} bounds=\"parent\">\r\n            <div className=\"draggable-box shadow-md rounded-lg px-2 py-1 hover:shadow-2xl transition\">\r\n              <img src={windowsIcon} alt=\"Windows\" className=\"w-14 h-14 mx-auto\" draggable={false} />\r\n              <div className=\"text-sm font-medium dark:text-white text-black\">{t(\"host_os\")}</div>\r\n            </div>\r\n          </Draggable>\r\n\r\n          {/* Internet */}\r\n          <Draggable position={internetPosition} onDrag={(e, d) => setInternetPosition({ x: d.x, y: d.y })} bounds=\"parent\">\r\n            <div className=\"draggable-box shadow-md rounded-lg px-2 py-1 hover:shadow-2xl transition\">\r\n              <img src={cloudIcon} alt=\"Internet\" className=\"w-14 h-14 mx-auto\" draggable={false} />\r\n              <div className=\"text-sm font-medium dark:text-white text-black\">{t(\"internet\")}</div>\r\n            </div>\r\n          </Draggable>\r\n\r\n          {/* VM icons */}\r\n          {safeMachines.map((vm, i) => {\r\n            const pos = positions[vm.name] || { x: 400 + i * 140, y: 300 };\r\n            const ipText = vm.ipValid ? vm.ip : t(\"ip_unknown\");\r\n\r\n            const handleClick = () => {\r\n              if (showDelete && onDeleteConfirm) {\r\n                onDeleteConfirm(vm.name);\r\n              }\r\n            };\r\n\r\n            return (\r\n              <Draggable\r\n                key={vm.name}\r\n                position={pos}\r\n                onDrag={(e, d) =>\r\n                  setPositions((prev) => ({\r\n                    ...prev,\r\n                    [vm.name]: { x: d.x, y: d.y },\r\n                  }))\r\n                }\r\n                bounds=\"parent\"\r\n                disabled={showDelete}\r\n              >\r\n                <div\r\n                  className=\"draggable-box shadow-md rounded-lg px-2 py-1 hover:shadow-2xl transition\"\r\n                  onContextMenu={(e) => onRightClick(e, vm)}\r\n                  onDoubleClick={() => onDoubleClick?.(vm)}\r\n                  onClick={handleClick}\r\n                  title={`VM: ${vm.name}\\nAdapter: ${vm.adapterType || \"N/A\"}\\nIP: ${ipText}`}\r\n                >\r\n                  <div className=\"text-4xl\">💻</div>\r\n                  <div className=\"text-sm font-semibold truncate w-[100px] mx-auto dark:text-white text-black\">\r\n                    {vm.name}\r\n                  </div>\r\n                  {vm.networkInfo && (\r\n                    <div className=\"text-xs mt-1 truncate text-gray-500 dark:text-gray-300\">{vm.networkInfo}</div>\r\n                  )}\r\n                  <div className=\"text-xs italic mt-1 truncate text-gray-400 dark:text-gray-300\">🌐 {ipText}</div>\r\n                </div>\r\n              </Draggable>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getLineProps(from, to, baseClass = \"\", modifier = \"\", strokeWidth = 2) {\r\n  return {\r\n    x1: from.x,\r\n    y1: from.y,\r\n    x2: to.x,\r\n    y2: to.y,\r\n    strokeWidth,\r\n    className: `${baseClass} ${modifier}`.trim(),\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}