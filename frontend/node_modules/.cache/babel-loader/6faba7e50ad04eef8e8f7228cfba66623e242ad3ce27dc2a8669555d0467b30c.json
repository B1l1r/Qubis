{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Qubis\\\\frontend\\\\src\\\\components\\\\MyComputerPanel.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTranslation } from \"../i18n\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyComputerPanel({\n  machines,\n  darkMode\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const safeMachines = Array.isArray(machines) ? machines : [];\n  const getStatusIcon = status => {\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case \"running\":\n        return \"游릭\";\n      case \"paused\":\n        return \"游리\";\n      case \"powered off\":\n      default:\n        return \"游댮\";\n    }\n  };\n  const getAdapterLabel = adapterType => {\n    switch (adapterType === null || adapterType === void 0 ? void 0 : adapterType.toLowerCase()) {\n      case \"nat\":\n        return t(\"adapter_nat\");\n      case \"bridged\":\n        return t(\"adapter_bridged\");\n      case \"nat-network\":\n        return t(\"adapter_nat_network\");\n      case \"host-only\":\n        return t(\"adapter_host_only\");\n      default:\n        return t(\"adapter_other\");\n    }\n  };\n  const formatIP = vm => {\n    if (!vm.ipValid) return t(\"ip_unknown\");\n    return vm.ip || t(\"waiting_for_ip\");\n  };\n  const bgColor = darkMode ? \"bg-gray-900\" : \"bg-white\";\n  const textColor = darkMode ? \"text-white\" : \"text-gray-800\";\n  const boxColor = darkMode ? \"bg-gray-800 border-gray-700 text-white\" : \"bg-gray-100 border-gray-300 text-gray-900\";\n  const borderColor = darkMode ? \"border-gray-400\" : \"border-gray-300\";\n  const labelColor = darkMode ? \"text-gray-300\" : \"text-gray-600\";\n  const ipColor = darkMode ? \"text-gray-400\" : \"text-gray-500\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-[300px] min-w-[300px] max-w-[300px] h-full flex flex-col ${bgColor} p-4 border-r ${borderColor} shadow-inner select-none`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-2xl font-bold mb-4 border-b pb-2 ${textColor} ${borderColor}`,\n      children: [\"\\uD83D\\uDCC2 \", t(\"virtual_machines\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3 flex-1 overflow-hidden\",\n      children: safeMachines.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${labelColor} text-base`,\n        children: t(\"no_virtual_machines\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : safeMachines.map(vm => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 rounded-xl shadow-md hover:shadow-lg hover:bg-opacity-90 transition-all duration-200 border ${boxColor}`,\n        title: vm.status === \"running\" ? `IP: ${vm.ip}` : t(\"vm_off\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-semibold truncate\",\n            children: vm.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: getStatusIcon(vm.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-sm mt-1 truncate ${labelColor}`,\n          children: [t(\"network\"), \": \", getAdapterLabel(vm.adapterType)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-xs mt-1 truncate ${ipColor}`,\n          children: [\"\\uD83C\\uDF10 IP: \", formatIP(vm)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, vm.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComputerPanel, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = MyComputerPanel;\nvar _c;\n$RefreshReg$(_c, \"MyComputerPanel\");","map":{"version":3,"names":["React","useTranslation","jsxDEV","_jsxDEV","MyComputerPanel","machines","darkMode","_s","t","safeMachines","Array","isArray","getStatusIcon","status","toLowerCase","getAdapterLabel","adapterType","formatIP","vm","ipValid","ip","bgColor","textColor","boxColor","borderColor","labelColor","ipColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","name","id","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Qubis/frontend/src/components/MyComputerPanel.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from \"../i18n\";\r\n\r\nexport default function MyComputerPanel({ machines, darkMode }) {\r\n  const { t } = useTranslation();\r\n  const safeMachines = Array.isArray(machines) ? machines : [];\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case \"running\":\r\n        return \"游릭\";\r\n      case \"paused\":\r\n        return \"游리\";\r\n      case \"powered off\":\r\n      default:\r\n        return \"游댮\";\r\n    }\r\n  };\r\n\r\n  const getAdapterLabel = (adapterType) => {\r\n    switch (adapterType?.toLowerCase()) {\r\n      case \"nat\":\r\n        return t(\"adapter_nat\");\r\n      case \"bridged\":\r\n        return t(\"adapter_bridged\");\r\n      case \"nat-network\":\r\n        return t(\"adapter_nat_network\");\r\n      case \"host-only\":\r\n        return t(\"adapter_host_only\");\r\n      default:\r\n        return t(\"adapter_other\");\r\n    }\r\n  };\r\n\r\n  const formatIP = (vm) => {\r\n    if (!vm.ipValid) return t(\"ip_unknown\");\r\n    return vm.ip || t(\"waiting_for_ip\");\r\n  };\r\n\r\n  const bgColor = darkMode ? \"bg-gray-900\" : \"bg-white\";\r\n  const textColor = darkMode ? \"text-white\" : \"text-gray-800\";\r\n  const boxColor = darkMode\r\n    ? \"bg-gray-800 border-gray-700 text-white\"\r\n    : \"bg-gray-100 border-gray-300 text-gray-900\";\r\n  const borderColor = darkMode ? \"border-gray-400\" : \"border-gray-300\";\r\n  const labelColor = darkMode ? \"text-gray-300\" : \"text-gray-600\";\r\n  const ipColor = darkMode ? \"text-gray-400\" : \"text-gray-500\";\r\n\r\n  return (\r\n    <div\r\n      className={`w-[300px] min-w-[300px] max-w-[300px] h-full flex flex-col ${bgColor} p-4 border-r ${borderColor} shadow-inner select-none`}\r\n    >\r\n      <h2 className={`text-2xl font-bold mb-4 border-b pb-2 ${textColor} ${borderColor}`}>\r\n        游늭 {t(\"virtual_machines\")}\r\n      </h2>\r\n\r\n      <div className=\"space-y-3 flex-1 overflow-hidden\">\r\n        {safeMachines.length === 0 ? (\r\n          <p className={`${labelColor} text-base`}>{t(\"no_virtual_machines\")}</p>\r\n        ) : (\r\n          safeMachines.map((vm) => (\r\n            <div\r\n              key={vm.id}\r\n              className={`p-3 rounded-xl shadow-md hover:shadow-lg hover:bg-opacity-90 transition-all duration-200 border ${boxColor}`}\r\n              title={vm.status === \"running\" ? `IP: ${vm.ip}` : t(\"vm_off\")}\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-lg font-semibold truncate\">{vm.name}</span>\r\n                <span className=\"text-xl\">{getStatusIcon(vm.status)}</span>\r\n              </div>\r\n\r\n              <div className={`text-sm mt-1 truncate ${labelColor}`}>\r\n                {t(\"network\")}: {getAdapterLabel(vm.adapterType)}\r\n              </div>\r\n\r\n              <div className={`text-xs mt-1 truncate ${ipColor}`}>\r\n                游깷 IP: {formatIP(vm)}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}